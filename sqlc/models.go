// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"github.com/jackc/pgx/v5/pgtype"
	"github.com/jmarren/deepfried/consts"
)

type Admin struct {
	UserID pgtype.UUID
}

type AudioAndArtwork struct {
	ID         pgtype.UUID
	ArtworkSrc string
	AudioSrc   string
}

type AudioFile struct {
	ID                  pgtype.UUID
	UserID              pgtype.UUID
	Title               string
	AudioSrc            string
	Bpm                 int32
	MusicalKey          consts.MusicalKey
	MusicalKeySignature consts.MusicalKeySignature
	MajorMinor          consts.MajorMinor
	PlaybackSeconds     int32
	FileSize            int32
	Created             pgtype.Timestamp
	ListenCount         int32
	DownloadCount       int32
	VisArr              []int32
	UsageRights         pgtype.Text
	ArtworkSrc          string
	LastModified        pgtype.Timestamp
}

type AudioFileSearchRow struct {
	Title               string
	Username            string
	StemCount           pgtype.Int8
	AudioSrc            string
	UserID              pgtype.UUID
	ArtworkSrc          string
	Bpm                 int32
	VisArr              []int32
	PlaybackSeconds     int32
	Created             pgtype.Timestamp
	MusicalKey          consts.MusicalKey
	MusicalKeySignature consts.MusicalKeySignature
	MajorMinor          consts.MajorMinor
	StemFileNames       interface{}
	TagArray            []string
	Doc                 pgtype.Text
}

type AudioFileStem struct {
	AudioFileID  pgtype.UUID
	StemFileName string
}

type AudioFileTag struct {
	TagID       int32
	AudioFileID pgtype.UUID
}

type AudioFileTagArray struct {
	ID       pgtype.UUID
	TagArray []string
}

type BasicUser struct {
	ID       pgtype.UUID
	Username string
}

type CarouselCard struct {
	Username        string
	UserID          pgtype.UUID
	Title           string
	AudioSrc        string
	Bpm             int32
	PlaybackSeconds int32
	Created         pgtype.Timestamp
	ArtworkSrc      string
	ListenCount     int32
}

type EditorsPick struct {
	ID          int32
	AudioFileID pgtype.UUID
}

type FeaturedTrack struct {
	ID          pgtype.Int4
	AudioFileID pgtype.UUID
}

type FollowNotification struct {
	UserID        pgtype.UUID
	NewFollowerID pgtype.UUID
	Seen          pgtype.Bool
}

type FollowerCount struct {
	FollowingID pgtype.UUID
	Count       int64
}

type Following struct {
	FollowerID  pgtype.UUID
	FollowingID pgtype.UUID
}

type FollowingCount struct {
	FollowerID pgtype.UUID
	Count      int64
}

type Pin struct {
	ID     int32
	FileID pgtype.UUID
	UserID pgtype.UUID
}

type PlaySource struct {
	ID         pgtype.UUID
	AudioSrc   string
	ArtworkSrc string
}

type Playable struct {
	ID              pgtype.UUID
	UserID          pgtype.UUID
	AudioSrc        string
	Username        string
	Title           string
	Bpm             int32
	PlaybackSeconds int32
	Created         pgtype.Timestamp
	ArtworkSrc      string
}

type Profile struct {
	UserID       pgtype.UUID
	Created      pgtype.Timestamp
	UserLocation pgtype.Text
	LastModified pgtype.Timestamp
	Bio          pgtype.Text
}

type SearchDoc struct {
	Doc         pgtype.Text
	UserID      pgtype.UUID
	AudioFileID pgtype.UUID
}

type StemArray struct {
	AfID          pgtype.UUID
	StemFileNames []string
}

type SubmissionEntry struct {
	ID          pgtype.UUID
	UserID      pgtype.UUID
	PostingID   pgtype.UUID
	AudioFileID pgtype.UUID
}

type SubmissionPosting struct {
	ID          pgtype.UUID
	CreatorID   pgtype.UUID
	Title       string
	Description pgtype.Text
}

type Tag struct {
	ID      int32
	TagName string
}

type User struct {
	ID        pgtype.UUID
	CognitoID string
	Username  string
}

type UserDownload struct {
	UserID      pgtype.UUID
	AudioFileID pgtype.UUID
}

type UserFollowing struct {
	Fi pgtype.UUID
	Fu string
}

type UserPin struct {
	UserID      pgtype.UUID
	AudioFileID pgtype.UUID
	TagArray    []string
	Title       string
	AudioSrc    string
	ArtworkSrc  string
}

type UserSearchRow struct {
	Username string
	Bio      pgtype.Text
	ID       pgtype.UUID
}
