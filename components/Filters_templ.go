// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/jmarren/deepfried/util"

func FiltersModal() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<head hx-head=\"append\"><link href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(util.GetStaticSrc("css/filters.css"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/Filters.templ`, Line: 7, Col: 51}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" rel=\"stylesheet\" type=\"text/css\"><script hx-preserve=\"true\" src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(util.GetStaticSrc("js/filters.js"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/Filters.templ`, Line: 8, Col: 69}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></script></head><div id=\"filters-form\" class=\"component-fade-in\" hx-on:click=\"event.stopPropagation()\"><div id=\"filters-form-title\">Filters</div><div id=\"filters-form-body\"><div id=\"bpm-section\"><div class=\"filter-section-title\">Bpm</div><div class=\"filters-form-section-content\"><div class=\"checkbox-container\"><input type=\"checkbox\" name=\"bpm-radio\" hx-on:change=\"toggleBpmType(this)\" value=\"use-exact\"> <label for=\"bpm-radio\">use exact bpm</label></div><div class=\"input-container bpm-exact\"><input type=\"number\" name=\"exact-bpm\" class=\"input-field\" hx-on:change=\"\" disabled></div><div class=\"checkbox-container\"><input type=\"checkbox\" name=\"bpm-radio\" hx-on:change=\"toggleBpmType(this)\" value=\"use-range\"> <label for=\"bpm-radio\">use range</label></div><div id=\"bpm-min-max-inputs-container\" class=\"input-container bpm-range\"><div><label for=\"min-bpm\">min bpm</label> <input type=\"number\" name=\"min-bpm\" class=\"\" value=\"0\" disabled></div><div><label for=\"max-bpm\">max bpm</label> <input type=\"number\" name=\"max-bpm\" class=\"\" value=\"200\" disabled></div></div><div id=\"bpm-slider-bar-container\" class=\"bpm-range\"><div class=\"bpm-range\" id=\"display-slider\" _=\"\n\t\t\t\t\t\t\ton valueChanged(low, high) \n\t\t\t\t\t\t\t\tlog low\n\t\t\t\t\t\t\t\tlog high\n\t\t\t\t\t\t\t\"><div id=\"low-slider\" hx-on:pointerdown=\"grabSlider(this, event)\"></div><div id=\"high-slider\" hx-on:pointerdown=\"grabSlider(this, event)\"></div></div><!--\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid=\"display-slider\"\n\t\t\t\t\t\t\t_=\"\n\t\t\t\t\t\t\ton valueChanged(low, high) \n\t\t\t\t\t\t\t\tlog low\n\t\t\t\t\t\t\t\tlog high\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tid=\"low-slider\"\n\t\t\t\t\t\t\t\t_=\"\n\t\t\t\t\t\t\ton pointerdown \n\t\t\t\t\t\t\tsend event to \n\t\t\t\t\t\t\t#range-low\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t<div id=\"high-slider\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"slider-track\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"range-low\"\n\t\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tmax=\"200\"\n\t\t\t\t\t\t\t\tvalue=\"0\"\n\t\t\t\t\t\t\t\t_=\"\n\t\t\t\t\t\t\t\ton input \n\t\t\t\t\t\t\t\t\tset :higherVal to \n\t\t\t\t\t\t\t\t\t#range-high.value as an Int\n\n\t\t\t\t\t\t\t\t\tset :myVal to \n\t\t\t\t\t\t\t\t\tme.value as an Int\n\n\t\t\t\t\t\t\t\t\tif :myVal <= :higherVal\n\t\t\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\t\t\tlog event\n\t\t\t\t\t\t\t\t\t\tset me.value to :myVal - 1\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"range-high\"\n\t\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tmax=\"200\"\n\t\t\t\t\t\t\t\tvalue=\"100\"\n\t\t\t\t\t\t\t\t_=\"\n\t\t\t\t\t\t\t\ton input \n\t\t\t\t\t\t\t\t\tset :lowerVal to \n\t\t\t\t\t\t\t\t\t#range-low.value as an Int\n\n\t\t\t\t\t\t\t\t\tset :myVal to \n\t\t\t\t\t\t\t\t\tme.value as an Int\n\n\t\t\t\t\t\t\t\t\tif :myVal >= :lowerVal \n\t\t\t\t\t\t\t\t\t\tsend valueChanged(low: :lowerVal, high: :myVal) to #display-slider\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t--><!--\n\t\t\t\t\t\t<div id=\"bpm-slider-bar\">\n\t\t\t\t\t\t\t<input type=\"range\" orient=\"horizontal\" id=\"bpm-slider-one\" min=\"0\" max=\"100\" step=\"1\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"bpm-slider-bar\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tid=\"bpm-slider-one\"\n\t\t\t\t\t\t\t\thx-on:pointerdown=\"grabBpmSlider(this, event)\"\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tid=\"bpm-slider-two\"\n\t\t\t\t\t\t\t\thx-on:pointerdown=\"grabBpmSlider(this, event)\"\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t--></div></div></div><div id=\"musical-key-section\"><div class=\"filter-section-title\">Key</div><div class=\"filters-form-section-content\"><div class=\"input-container\"><label for=\"musical-key\">key</label> <select class=\"input-field\" name=\"musical-key\"><option value=\"any\">any</option> <option value=\"C\">C</option> <option value=\"D\">D</option> <option value=\"E\">E</option> <option value=\"F\">F</option> <option value=\"G\">G</option> <option value=\"A\">A</option> <option value=\"B\">B</option></select></div><div class=\"input-container\"><label for=\"musical-key-signature\">key signature</label> <select class=\"input-field\" name=\"musical-key-signature\"><option value=\"any\"></option> <option value=\"natural\">natural</option> <option value=\"sharp\">#</option> <option value=\"flat\">&#9837;</option></select></div><div class=\"input-container\"><label for=\"major-minor\">major/minor</label> <select class=\"input-field\" name=\"major-minor\"><option value=\"any\"></option> <option value=\"Major\">Major</option> <option value=\"Minor\">Minor</option></select></div></div></div><div id=\"file-type-section\"><div class=\"filter-section-title\">File</div><div class=\"filters-form-section-content\"><input type=\"checkbox\" name=\"includes-stems-only\" unchecked> <label for=\"includes-stems-only\">includes stems only</label></div></div></div><div id=\"filter-section-bottom-buttons\"><button id=\"cancel-filters-button\" hx-on:click=\"htmx.find(&#39;#modal&#39;).innerHTML = &#39;&#39;\">Cancel</button> <button id=\"apply-filters-button\" hx-get=\"/search?page=1\" hx-target=\"#page-content\" hx-push-url=\"true\" hx-on:htmx:after-request=\"htmx.find(&#39;#modal&#39;).click()\" hx-include=\"#filters-form, input[name=keyword]\">Apply</button></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var filtersHeadOnceHandle = templ.NewOnceHandle()

func FiltersModalHead() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var5 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script id=\"filters-modal-script\">\n\n\t\tfunction toggleBpmType(elt) {\n\t\t\tconst useExactCbx = htmx.find(\"input[value=use-exact]\")\n\t\t\tconst useRangeCbx = htmx.find(\"input[value=use-range]\")\n\t\t\tconst exactInput = htmx.find(\"input[name=exact-bpm]\")\n\t\t\tconst minBpmInput = htmx.find(\"input[name=min-bpm]\")\n\t\t\tconst maxBpmInput = htmx.find(\"input[name=max-bpm]\")\n\t\t\tconst minBpmLabel = htmx.find(\"label[for=min-bpm]\")\n\t\t\tconst maxBpmLabel = htmx.find(\"label[for=max-bpm]\")\n\t\t\tif (useExactCbx.checked == true) {\n\t\t\t\tminBpmInput.disabled = true;\n\t\t\t\tmaxBpmInput.disabled = true;\n\t\t\t\tminBpmLabel.style.color = ''\n\t\t\t\tmaxBpmLabel.style.color = ''\n\t\t\t\texactInput.disabled = false;\n\t\t\t\tuseRangeCbx.checked = false;\n\t\t\t} else if (useRangeCbx.checked == true) {\n\t\t\t\tminBpmInput.disabled = false;\n\t\t\t\tmaxBpmInput.disabled = false;\n\t\t\t\tminBpmLabel.style.color = 'var(--dark-gray)'\n\t\t\t\tmaxBpmLabel.style.color = 'var(--dark-gray)'\n\t\t\t\texactInput.disabled = true;\n\t\t\t}\n\n\t\t\tif (!useRangeCbx.checked) {\n\t\t\t\tminBpmInput.disabled = true;\n\t\t\t\tmaxBpmInput.disabled = true;\n\t\t\t\tminBpmLabel.style.color = ''\n\t\t\t\tmaxBpmLabel.style.color = ''\n\t\t\t} \n\t\t\tif (!useExactCbx.checked) {\n\t\t\t\texactInput.disabled = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction grabBpmSlider(elt, e) {\n\t\t\tconst useRangeCbx = htmx.find(\"input[value=use-range]\")\n\t\t\tif (!useRangeCbx.checked) return\n\t\t\thtmx.find(\"input[name=exact-bpm]\").disabled = true;\n\t\t\tconst MAX_ALLOWED_BPM = 200;\n\t\t\tconst SLIDER_WIDTH = htmx.find(\"#bpm-slider-bar\").getBoundingClientRect().width;\n\t\t\tconst COEFFICIENT =  MAX_ALLOWED_BPM / SLIDER_WIDTH;\n\n\t\t\tlet otherSlider;\n\t\t\tif (elt.id == \"bpm-slider-one\") {\n\t\t\t\totherSlider = htmx.find(\"#bpm-slider-two\")\n\t\t\t} else {\n\t\t\t\totherSlider = htmx.find(\"#bpm-slider-one\")\n\t\t\t}\n\n\t\t\t\n\t\t\tlet otherSliderLeft  = parseInt(otherSlider.style.left.trimEnd().trimEnd());\n\t\t\tif (!otherSliderLeft) {\n\t\t\t\totherSliderLeft = 0;\n\t\t\t}\n\n\n\t\t\tlet grabbed = true\n\t\t\telt.setPointerCapture(e.pointerId)\n\t\t\tconst parent = elt.parentNode\n\t\t\tlet newProgress\n\t\t\telt.onpointermove = (evt) => {\n\t\t\t\tlet relativeX = evt.clientX - parent.offsetLeft\n\t\t\t\trelativeX = Math.max(0, relativeX)\n\t\t\t\trelativeX = Math.min(parent.offsetWidth, relativeX)\n\t\t\t\tnewProgress = relativeX / parent.offsetWidth\n\t\t\t\telt.style.left = `${relativeX - 5}px`\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tconsole.log(\"relativeX: \", relativeX, \"\\notherSliderLeft: \", otherSliderLeft);\n\n\t\t\t\tif (otherSliderLeft > relativeX) {\n\t\t\t\t\tdocument.documentElement.style.setProperty('--bpm-slider-min',`${relativeX - 5}px`)\n\t\t\t\t\tdocument.documentElement.style.setProperty('--bpm-slider-max',`${otherSliderLeft}px`)\n\t\t\t\t\thtmx.find(\"input[name=min-bpm]\").value = relativeX  * COEFFICIENT\n\t\t\t\t\thtmx.find(\"input[name=max-bpm]\").value = otherSliderLeft * COEFFICIENT\n\t\t\t\t} else {\n\t\t\t\t\tdocument.documentElement.style.setProperty('--bpm-slider-max',`${relativeX - 5}px`)\n\t\t\t\t\tdocument.documentElement.style.setProperty('--bpm-slider-min',`${otherSliderLeft}px`)\n\t\t\t\t\thtmx.find(\"input[name=min-bpm]\").value = otherSliderLeft * COEFFICIENT\n\t\t\t\t\thtmx.find(\"input[name=max-bpm]\").value = relativeX * COEFFICIENT\n\t\t\t\t}\n\t\t\t}\n\t\t\twindow.onpointerup = () => {\n\t\t\t\telt.releasePointerCapture(e.pointerId)\n\t\t\t\telt.onpointermove = null\n\t\t\t\tgrabbed = false\n\t\t\t\twindow.onpointerup = null;\n\t\t\t}\n\n\t\t}\n\t\t\n\n\t</script> <style id=\"filters-styles\">\n      #filters-form {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tgap: 15px;\n\tpadding: 30px 40px 20px 40px;\n\t background-color: #ffffff;\n\t box-shadow: 0px 106px 42px rgba(0, 0, 0, 0.01),\n\t\t 0px 59px 36px rgba(0, 0, 0, 0.05), 0px 26px 26px rgba(0, 0, 0, 0.09),\n\t\t 0px 7px 15px rgba(0, 0, 0, 0.1), 0px 0px 0px rgba(0, 0, 0, 0.1);\n\t border-radius: 11px;\n\t font-family: \"Inter\", sans-serif;\n\tfont-weight: 600;\n\tfont-size: 0.8em;\n      }\n\n      #filters-form-title {\n\tfont-size: 1.5em;\n\talign-self: start;\n      }\n\n#filters-form-body {\n   display: flex;\n   flex-direction: row;\n   gap: 20px;\n}\n\n.filter-section-title {\n   color: var(--dark-gray);\n   font-size: 1.1em;\n   border-bottom: 1px solid var(--dark-gray);\n}\n\n.filters-form-section-content {\n\tpadding: 10px;\n}\n\n.checkbox-container {\n  display: flex;\n  padding-bottom: 0px;\n  align-items: center;\n} \n\n.input-container {\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 10px;\n  position: relative;\n}\n\n#bpm-min-max-inputs-container {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tflex-direction: row;\n\tmax-width: 200px;\n}\n\n.bpm-option-container { \n\tdisplay: flex;\n}\n\n#bpm-min-max-inputs-container input {\n\tmax-width: 80px;\n}\n\n#bpm-min-max-inputs-container>div {\n\tmax-width: 100px;\n}\n#bpm-slider-bar-container {\n      height: 15px;\n      width: 100%;\n      display: flex;\n      align-items: center;\n}\n\n#bpm-slider-bar {\n      height: 100%;\n      width: 100%;\n      border: 1px solid var(--light-gray-1);\n      border-radius: 2.5px;\n      position: relative;\n      display: flex;\n      align-items: center;\n      background: linear-gradient(to right,\n\t\t#ebebeb,\n\t    #ebebeb var(--bpm-slider-min),\n\t    var(--dark-gray) var(--bpm-slider-min),\n    \t    var(--dark-gray) var(--bpm-slider-max),\n    \t    #ebebeb var(--bpm-slider-max),\n\t    #ebebeb\n    \t  );\n    }\n\n#bpm-slider-one,\n#bpm-slider-two {\n        border: 1px solid var(--light-gray-1);\n\tleft: 0px;\n\tposition: absolute;\n\twidth: 10px; \n\theight: 110%;\n\tbackground-color: lightgray;\n}\n\n\n#bpm-slider-one {\n\tleft: var(--bpm-slider-min);\n}\n\n#bpm-slider-two {\n\tleft: var(--bpm-slider-max);\n}\n\n#bpm-section  {\n  color: #ebebeb;\n}\n\n#bpm-section label[for=bpm-radio] {\n  color: var(--dark-gray);\n}\n\n#filter-section-bottom-buttons {\n\theight: 40px;\n\tdisplay: flex;\n\tgap: 10px;\n\twidth: 100%;\n\tmargin-top: 40px;\n}\n\n#filter-section-bottom-buttons button {\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items:center;\n\tflex-grow:1;\n\tborder-radius: 10px;\n    transition: background-color 0.3s cubic-bezier(0.15, 0.83, 0.66, 1);\n}\n\n#filter-section-bottom-buttons #cancel-filters-button {\n}\n\n\n#filter-section-bottom-buttons #apply-filters-button {\n\tbackground-color: var(--dark-gray);\n\tcolor: white;\n\tborder: 2px solid var(--dark-gray);\n}\n\n\n  #filter-section-bottom-buttons #apply-filters-button:hover {\n\tbackground-color: darkgray;\n\tcolor: var(--dark-gray);\n  }\n\n  #filter-section-bottom-buttons  #cancel-filters-button {\n\tbackground-color: white;\n\tborder: 2px solid var(--dark-gray);\n\tcolor: black;\n  }\n\n\n  #filter-section-bottom-buttons  #cancel-filters-button:hover {\n\tbackground-color: lightgray;\n\tborder: 2px solid var(--dark-gray);\n\tcolor: black;\n}\n\n\n\n    </style>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = filtersHeadOnceHandle.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var5), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
