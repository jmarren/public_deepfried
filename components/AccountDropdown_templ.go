// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func AccountDropdown() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"katana-card\" id=\"account-dropdown\" tabindex=\"0\" hx-on:focusout=\"this.style.display = &#39;none&#39;\" hx-on:htmx:after-settle=\"this.focus()\" hx-swap-oob=\"true\" style=\"visibility: visible;\"><button hx-get=\"/me\" hx-target=\"#page-content\" hx-trigger=\"pointerdown\" hx-swap=\"innerHTML\" hx-push-url=\"true\">My Profile</button> <button hx-get=\"/my-downloads\" hx-target=\"#page-content\" hx-trigger=\"pointerdown\" hx-swap=\"innerHTML\" hx-push-url=\"true\">My Downloads</button> <button hx-get=\"/my-uploads\" hx-target=\"#page-content\" hx-trigger=\"pointerdown\" hx-swap=\"innerHTML\" hx-push-url=\"true\">My Uploads</button></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var dropdownHeadHandle = templ.NewOnceHandle()

func AccountDropdownHead() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script hx-preserve=\"true\" id=\"account-dropdown-script\">\n  const RemoveAccountDropdown = (e) => {\n    if (e.relatedTarget == null) {\n      document.getElementById(\"account-dropdown\").innerHTML = \"\"\n      document.getElementById(\"account-dropdown\").style.visibility = \"hidden\";\n    } else if (e.relatedTarget.id != \"profile-photo-button\") {\n      document.getElementById(\"account-dropdown\").innerHTML = \"\"\n      document.getElementById(\"account-dropdown\").style.visibility = \"hidden\";\n    }\n    return\n  }\n\n  const FocusAccountDropdown = () => {\n    let dropdown = document.getElementById(\"account-dropdown\")\n    dropdown.focus()\n  }\n\n\n\n</script> <style id=\"account-dropdown-styles\" hx-preserve=\"true\">\n  #account-dropdown {\n    width: fit-content;\n    white-space: nowrap;\n    font-family: Inter;\n    font-size: 12px;\n    font-weight: semibold;\n    position: absolute;\n    padding: 10px;\n    background-color: white;\n    transform: translateY(15px) translateX(-100px);\n    z-index: 2;\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    border: 0.5px solid var(--light-gray-2);\n    color: var(--dark-gray);\n    font-weight: 600;\n  }\n\n  #account-dropdown button {\n    text-align: start;\n    width: calc(100% - 20px);\n    padding: 10px;\n    border-radius: 10px;\n  }\n\n  #account-dropdown button:hover {\n    cursor: pointer;\n    background-color: #ededed;\n  }\n\n</style>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = dropdownHeadHandle.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
