// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/jmarren/deepfried/services"
	"github.com/jmarren/deepfried/util"
)

func TrackCardSearch(title string, m []*services.PlayableElt) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<head hx-head=\"merge\"><link href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(util.GetStaticSrc("css/my_downloads.css"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/TrackCardSearch.templ`, Line: 10, Col: 56}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" rel=\"stylesheet\" type=\"text/css\"><link href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(util.GetStaticSrc("css/carousel.css"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/TrackCardSearch.templ`, Line: 11, Col: 52}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" rel=\"stylesheet\" type=\"text/css\"><link href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(util.GetStaticSrc("css/track_card.css"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/TrackCardSearch.templ`, Line: 12, Col: 54}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" rel=\"stylesheet\" type=\"text/css\"></head><div id=\"my-downloads\"><div id=\"my-downloads-header\"><div id=\"my-downloads-title\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/TrackCardSearch.templ`, Line: 17, Col: 11}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><div class=\"searchbar-container\"><form id=\"searchbar\" class=\"icon-container\" hx-get=\"/my-downloads\" hx-select=\"#downloads-card-grid\" hx-target=\"#downloads-card-grid\" hx-push-url=\"true\"><button type=\"submit\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = SearchIcon().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</button> <input class=\"searchbar-input\" type=\"text\" name=\"downloads_keyword\" hx-get=\"/my-downloads\" hx-trigger=\"input throttle:1s\" hx-select=\"#downloads-card-grid\" hx-target=\"#downloads-card-grid\" hx-swap=\"innerHTML\" placeholder=\"search downloads\" hx-push-url=\"false\" hx-on:focus=\"event.preventDefault()\" hx-on:change=\"event.preventDefault()\" hx-on:input=\"event.preventDefault()\" hx-on:keydown=\"console.log(event.key); event.key.toLowerCase() === &#39;arrowdown&#39; ? console.log(&#39;arrow down&#39;) : null \"><!--\t\t\t\t<input hidden type=\"number\" name=\"bpm\"/>\n\t\t\t\t<input hidden type=\"text\" name=\"key\"/>\n\t\t\t\t<input hidden type=\"radio\" value=\"natural\"/>\n\t\t\t\t<input hidden type=\"radio\" value=\"major\"/>\n\t\t\t\t--><div id=\"search-dropdown\"></div></form></div></div><div id=\"downloads-card-grid\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, card := range m {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!--\n\t\t\t\t<div class=\"downloads-card-container\">\n\t\t\t\t--> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = CarouselCardBody(card).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" <!--\n\t\t\t\t</div>\n\t\t\t\t-->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

/*
	<!--
	<div class="downloads-grid-item katana-card track-card-container">
		<div class="card-initial">
			<button
				class="playable"
				id={ card.EltId }
				data-playbutton-type="carousel-card"
				hx-audio={ util.UuidString(card.ID) }
				hx-audio-toggle-fx="class white-track-card"
				hx-audio-toggle-target="closest .track-card-container"
				hx-get="/player"
				hx-target="#player"
				hx-swap="outerHTML"
			>
				<img class="artwork" src={ card.ArtworkSrc }/>
			</button>
			<div class="track-info">
				<span class="track-info-right">
					<span
						class="card-title clickable-text"
						hx-trigger="click"
						hx-get={ fmt.Sprintf("%s/%s", card.Username, card.Title) }
						hx-target="#page-content"
						hx-push-url="true"
					>{ card.Title }</span>
					<span class="card-bpm">
						{ fmt.Sprintf("%d", card.Bpm) } bpm
					</span>
					<span class="spacer"></span>
				</span>
			</div>
			<!--
			if card.IsPlaying {
				<div id="playing-indicator">
					<div id="playing-indicator-content">
						<div class="triangle-forward-container">
							<div class="triangle control triangle-forward"></div>
						</div>
					</div>
				</div>
			}
		</div>
		<div id="extra-info"></div>
	</div>
			-->
*/

var _ = templruntime.GeneratedTemplate
