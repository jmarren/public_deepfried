// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"github.com/jmarren/deepfried/services"
)

func TopBar(profilePhotoSrc string, notifications []*services.FollowNotification) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<nav id=\"topbar\"><div id=\"searchbar-container\"><form id=\"searchbar\" class=\"icon-container\" hx-get=\"/search?page=1\" hx-target=\"#page-content\" hx-push-url=\"true\"><button type=\"submit\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = SearchIcon().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</button> <input class=\"searchbar-input\" type=\"text\" name=\"keyword\" hx-get=\"/search-bar-dropdown\" hx-trigger=\"input throttle:1s\" hx-target=\"#search-dropdown\" hx-swap=\"innerHTML\" placeholder=\"search for music\" hx-push-url=\"false\" hx-on:focus=\"event.preventDefault()\" hx-on:blur=\"htmx.find(this.parentElement, &#39;#search-dropdown&#39;).innerHTML = &#39;&#39;\" hx-on:change=\"event.preventDefault()\" hx-on:input=\"event.preventDefault()\" hx-on:keydown=\"console.log(event.key); event.key.toLowerCase() === &#39;arrowdown&#39; ? console.log(&#39;arrow down&#39;) : null \"><!--\t\t\t\t<input hidden type=\"number\" name=\"bpm\"/>\n\t\t\t\t<input hidden type=\"text\" name=\"key\"/>\n\t\t\t\t<input hidden type=\"radio\" value=\"natural\"/>\n\t\t\t\t<input hidden type=\"radio\" value=\"major\"/>\n\t\t\t\t--><div id=\"search-dropdown\"></div></form></div><!-- <button onclick=\"toggleDarkMode()\">dark mode</button> --><div id=\"top-bar-right\"><!-- <a href=\"/search-results\">Create Account</a> -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if profilePhotoSrc == "" {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button hx-get=\"/account-dropdown\" id=\"create-profile-button\">Create Profile</button>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"notification-container\"><button id=\"notification-button\" hx-patch=\"/notifications\" hx-target=\"#notification-red-circle\" hx-swap=\"outerHTML\" _=\"\n\t\t\t\t\t\t\t  on click \n\t\t\t\t\t\t\t  toggle the *display of #notification-dropdown\n\t\t\t\t\t\t\t  on focusout \n\t\t\t\t\t\t\t   hide #notification-dropdown with *display\n\t\t\t\t\t\t\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = NotificationBell().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(notifications) > 0 {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"notification-red-circle\"></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</button><div class=\"katana-card topbar-dropdown\" id=\"notification-dropdown\" tabindex=\"0\" style=\"display: none\" _=\"\n\t\t\t\t\t\t\t  on blur\n\t\t\t\t\t\t\t    log &#39;blur&#39;\n\t\t\t\t\t\t\t    hide me with *display\n\t\t\t\t\t\t\t  on focusout \n\t\t\t\t\t\t\t    log &#39;focusout&#39;\n\t\t\t\t\t\t\t    hide me with *display\n\t\t\t\t\t\t\t\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(notifications) < 1 {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div>No notifications</div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				for _, notif := range notifications {
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button hx-get=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var2 string
					templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("/%s", notif.Username))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/TopBar.templ`, Line: 84, Col: 52}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-target=\"#page-content\"><img src=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var3 string
					templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(notif.ProfilePhotoSrc)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/TopBar.templ`, Line: 87, Col: 41}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"> ")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var4 string
					templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(notif.Username)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/TopBar.templ`, Line: 88, Col: 25}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" followed you!</button>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div><button id=\"upload-button\" hx-get=\"/modal/upload\" hx-swap=\"innerHTML\" hx-target=\"#modal\" preload=\"mouseover\">upload</button><div id=\"far-right-object\"><button id=\"profile-photo-button\" _=\"\n\t\t\t\t\t\t  on click \n\t\t\t\t\t\t  toggle the *display of #account-dropdown\n\t\t\t\t\t\t  on focusout \n\t\t\t\t\t\t   hide #account-dropdown with *display\n\t\t\t\t\t\"><img height=\"32\" width=\"32\" class=\"profile-photo\" src=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(profilePhotoSrc)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/TopBar.templ`, Line: 107, Col: 77}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></button><div class=\"katana-card topbar-dropdown\" id=\"account-dropdown\" tabindex=\"0\" style=\"display: none\" _=\"\n\t\t\t\t\t\t  on blur\n\t\t\t\t\t\t    log &#39;blur&#39;\n\t\t\t\t\t\t    hide me with *display\n\t\t\t\t\t\t  on focusout \n\t\t\t\t\t\t    log &#39;focusout&#39;\n\t\t\t\t\t\t    hide me with *display\n\t\t\t\t\t\t\"><button hx-get=\"/me\" hx-target=\"#page-content\" hx-trigger=\"pointerdown\" hx-swap=\"innerHTML\" hx-push-url=\"true\">My Profile</button> <button hx-get=\"/my-downloads\" hx-target=\"#page-content\" hx-trigger=\"pointerdown\" hx-swap=\"innerHTML\" hx-push-url=\"true\">My Downloads</button> <button hx-get=\"/my-uploads\" hx-target=\"#page-content\" hx-trigger=\"pointerdown\" hx-swap=\"innerHTML\" hx-push-url=\"true\">My Uploads</button></div><!--\t\t\t\t\t<div id=\"account-dropdown\" style=\"visibility: hidden;\"></div> --></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></nav>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var topBarStylesHandle = templ.NewOnceHandle()

func TopBarStyles() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var6 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var6 == nil {
			templ_7745c5c3_Var6 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var7 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<style id=\"topbar-styles\" hx-preserve=\"true\">\n  #topbar {\n    background-color: var(--dark-gray);\n    position: fixed;\n    z-index: 2;\n    height: 60px;\n    width: 100%;\n    padding-left: 15px;\n    padding-right: 30px;\n    display: flex;\n    align-items: center;\n    color: white;\n    padding-top: 7.5px;\n    padding-bottom: 7.5px;\n  }\n\n#topbar #logo {\n    font-family: Aileron;\n/*    letter-spacing: 1rem; */\n    font-size: 24px;\n    cursor: pointer;\n}\n\n#logo-fm {\n    font-size: 20px;\n    color: orange;\n}\n\n  #topbar input[name=keyword] {\n    all: unset;\n    width: 350px;\n    height: 30px;\n    border-radius: 5px;\n    background-color: var(--input-color-1);\n    color: white;\n    padding: 4px;\n    padding-left: 10px;\n    cursor: text;\n  }\n\n  topbar>input[name=keyword]:focus {\n    border: 1px solid var(--hover-color-1);\n  }\n\n\n#topbar #create-profile-button {\n    cursor: pointer;\n    font-weight: bold;\n    padding: 7px 13px;\n    border-radius: 3px;\n    transition: all 0.2s cubic-bezier(0.15, 0.83, 0.66, 1);\n    background-color: var(--cta-color);\n    cursor: pointer;\n    font-weight: bold;\n    white-space: nowrap;\n}\n\n#topbar #create-profile-button:hover {\n    background-color: #2895f7;\n}\n\n  #searchbar {\n    padding-left: 10px;\n    border-radius: 5px;\n    transition: all 0.2s cubic-bezier(0.15, 0.83, 0.66, 1);\n    outline: 2px solid rgba(255, 255, 255, 0);\n    position: relative;\n  }\n\n\n  #searchbar:focus-within {\n    outline: 2px solid rgba(255, 255, 255, 1);\n  }\n\n\n\n\n  #searchbar-container {\n    flex-grow: 1;\n    display: flex;\n    justify-content: center;\n    padding-right: 10px;\n    position: relative;\n  }\n\n\n  #search-dropdown {\n\tposition: absolute;\n\twidth: 100%;\n\tpointer-events: none;\n  }\n\n  #search-dropdown option {\n\tdisplay: none;\n  }\n\n  #search-dropdown-items { \n        transform: translateY(calc(50% + 21px)) translateX(-10px);\n  }\n  .search-dropdown-item img {\n\twidth: 40px;\n\theight: 40px;\n\tmax-width: 40px;\n\tmax-height: 40px;\n  }\n\n  .search-dropdown-item {\n\tfont-size: 12px;\n\tcursor: pointer;\n\tpadding: 5px;\n\tdisplay: flex;\n\theight: 50px;\n\tbackground-color: var(--dark-gray);\n\tpointer-events: all;\n}\n  \n  .search-dropdown-item:hover {\n\tbackground-color: var(--input-color-1);\n}\n\n\n  .search-dropdown-item:focus {\n\tbackground-color: var(--input-color-1);\n}\n\n  .search-dropdown-item:first-of-type {\n\tborder-radius: 5px 5px 0 0;\n  }\n  .search-dropdown-item:first-of-type img {\n\tborder-radius: 5px 0 0 0;\n  }\n\n  .search-dropdown-item:last-of-type {\n\tborder-radius: 0 0 5px 5px;\n}\n  .search-dropdown-item:last-of-type img{\n\tborder-radius: 0 0 0 5px;\n}\n\n.search-dropdown-info {\n\tpadding: 5px;\n}\n\n  #upload-button {\n    cursor: pointer;\n    font-weight: bold;\n    padding: 7px 13px;\n    border-radius: 3px;\n/*    color: white; */\n/*    border: 1px solid white; */\n    background-color: white;\n    color: var(--dark-gray);\n    justify-self: end;\n    transition: all 0.2s cubic-bezier(0.15, 0.83, 0.66, 1);\n\n  }\n\n  #upload-button:hover {\n    background-color: #5c5c5c;\n  }\n\n  #top-bar-right {\n    display: flex;\n    gap: 15px;\n    align-items: center;\n    position: relative; \n    height: 35px;\n    position: relative; \n  }\n\n  #top-bar-right #far-right-object {\n\tposition: relative;\n\theight: 100%;\n\taspect-ratio: 1;\n  }\n\n  #top-bar-right #far-right-object a {\n\theight: 100%;\n\tdisplay: flex;\n\talign-items: center;\n  }\n\n  #profile-photo-button {\n    position: relative;\n    cursor: pointer;\n    max-height:100%;\n    aspect-ratio: 1;\n    border-radius: 100%;\n    transition: all 0.2s cubic-bezier(0.15, 0.83, 0.66, 1);\n    outline: 3px solid rgba(255, 255, 255, 0);\n  }\n\n  #profile-photo-button:hover {\n    outline: 3px solid rgba(255, 255, 255, 1);\n}\n\n  #topbar .icon {\n    position: relative;\n    bottom: 1px;\n    width: 15px;\n    height: 15px;\n  }\n</style>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = topBarStylesHandle.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var7), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
