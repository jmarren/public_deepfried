package components

import (
	"fmt"
	"github.com/jmarren/deepfried/services"
	"github.com/jmarren/deepfried/util"
)

templ UserFeed(data []*services.UserFeedItem, playing string) {
	<head hx-head="merge">
		<link href={ util.GetStaticSrc("css/feed.css") } rel="stylesheet" type="text/css"/>
	</head>
	<div id="user-feed">
		<div id="user-feed-centered">
			for _, item := range data {
				<div class="user-feed-item fade-in-slowly">
					<div class="feed-item-header">
						<span
							class="feed-item-title"
							hx-get={ fmt.Sprintf("/%s", item.Username) }
							hx-target="#page-content"
							hx-trigger="click"
						>
							<img
								src={ item.ProfilePhotoSrc }
								class="profile-photo"
							/>
							{ item.Username }
						</span>
						<span class="feed-item-created-time">
							{ item.DisplayTime }
						</span>
					</div>
					<div class="feed-item-content  katana-card">
						<div class="feed-item-image-container">
							<img src={ item.ArtworkSrc } class="feed-item-img"/>
						</div>
						<div class="feed-item-content-right">
							<div>
								<div
									class="feed-item-content-title"
									hx-trigger="click"
									hx-get={ fmt.Sprintf("/%s/%s", item.Username, item.Title) }
									hx-target="#page-content"
									hx-push-url="true"
								>
									{ item.Title }
								</div>
								<div class="feed-item-tags-container">
									for _, tag := range item.Tags {
										<span>{ tag } </span>
									}
								</div>
							</div>
							<div class="feed-item-content-under-title">
								<div class="feed-item-info-left">
									<div class="feed-item-stats">
										<div class="feed-item-stats-row">
											<span class="feed-item-stats-label">bpm</span>
											<div class="feed-item-stats-data">
												{ fmt.Sprintf("%d", item.Bpm) }
											</div>
										</div>
										<div class="feed-item-stats-row">
											<span class="feed-item-stats-label">key</span>
											<div class="feed-item-stats-data"></div>
										</div>
									</div>
									<button
										id={ item.EltId }
										hx-audio={ item.ID.String() }
										hx-audio-toggle-fx="innerHTML playtriangle pausebars"
										preload="mouseover"
										preload-images="true"
										data-audio-src={ item.AudioSrc }
										data-audio-user={ item.Username }
										data-audio-title={ item.Title }
										data-playbutton-type="triangle-bars"
										data-img-src={ item.ArtworkSrc }
										class="play-button feed-page playable"
									>
										if item.IsPlaying {
											<div class="pause-bars">
												<div class="pause-bar"></div>
												<div class="pause-bar"></div>
											</div>
										} else {
											<div class="play-triangle"></div>
										}
									</button>
								</div>
								@AudioVis(&item.VisArr, item.ID.String())
							</div>
						</div>
					</div>
				</div>
			}
			if len(data) < 1 {
				<div id="not-following-anyone">You're not following anyone yet!</div>
			}
		</div>
	</div>
}
